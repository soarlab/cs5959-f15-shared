method Min(a:int, b:int, c:int) returns (m:int)
  ensures m*m <= a*a;
  ensures m*m <= b*b;
  ensures m*m <= c*c;
  ensures m*m == a*a || m*m == b*b || m*m == c*c;
{ 
  if(a*a < b*b){
    if(a*a < c*c){ // a smallest
      m := a;
    }
    else{ // c smallest
      m := c;  
    }
  }
  else if(b*b < c*c){ // b smallest
    m := b;
  }
  else{  // c smallest
    m := c;
  }
  
  if(m < 0){
    m := m * -1;
  }
}

method Multiply2(n:int) returns (r:int)
  requires 0 <= n;
  ensures r == 2*n;
{
  r := 0;
  var i:int := 0;
  while(i < n)
    invariant i <= n;
    invariant r == 2*i;
  {
    r := r + 2;
    i := i + 1;
  }    
}