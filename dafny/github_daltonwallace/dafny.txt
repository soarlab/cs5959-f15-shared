method Min(x: int, y: int, z: int) returns (min: int)
  ensures min >= 0
  ensures min <= abs(x)
  ensures min <= abs(y)
  ensures min <= abs(z)
{
  var abs_x := abs(x);
  var abs_y := abs(y);
  var abs_z := abs(z);
  
  assert abs_x >= 0;
  assert abs_y >= 0;
  assert abs_z >= 0;
  
  if (abs_x <= abs_z && abs_x <= abs_y) {
    min := abs_x;
  } else if (abs_y <= abs_z && abs_y <= abs_x) {
    min := abs_y;
  } else {
    min := abs_z;
  }
  
}

function method abs(x: int): int
{
   if x < 0 then -x else x
}

method Multiply2(n:int) returns (r:int)
 requires 0 <= n;
 ensures r == 2*n;
{
 r := 0;
 var i:int := 0;
 while (i < n)
  invariant r == i*2
  invariant n >= i >= 0
 {
   r := r + 2;
   i := i + 1;
 }
}
